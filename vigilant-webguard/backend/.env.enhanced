# Vigilant WebGuard - Configuración de Servicios Mejorados
# Copia este archivo a .env y configura los servicios que tengas disponibles

# ==============================================
# SERVICIOS DE TELEMETRÍA Y OBSERVABILIDAD
# ==============================================

# Google Analytics 4 (GA4)
# Obtener desde: https://analytics.google.com/
# GA_MEASUREMENT_ID=G-XXXXXXXXXX
# GA_API_SECRET=your_measurement_protocol_api_secret

# AWS CloudWatch
# Obtener desde: https://console.aws.amazon.com/iam/
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_DEFAULT_REGION=us-east-1

# Azure Monitor
# Obtener desde: https://portal.azure.com/
# AZURE_INSTRUMENTATION_KEY=your_instrumentation_key
# AZURE_MONITOR_ENDPOINT=https://your-workspace.monitor.azure.com

# Datadog
# Obtener desde: https://app.datadoghq.com/organization-settings/api-keys
# DATADOG_API_KEY=your_datadog_api_key
# DATADOG_APP_KEY=your_datadog_app_key
# DATADOG_SITE=datadoghq.com

# New Relic
# Obtener desde: https://one.newrelic.com/launcher/api-keys-ui.api-keys-launcher
# NEW_RELIC_LICENSE_KEY=your_license_key
# NEW_RELIC_ACCOUNT_ID=your_account_id

# ==============================================
# CONFIGURACIÓN DE ESCANEO
# ==============================================

# Configuración general
WEBGUARD_ENV=development
WEBGUARD_LOG_LEVEL=INFO

# Límites de seguridad
MAX_CONCURRENT_REQUESTS=100
MAX_TOTAL_REQUESTS=50000
REQUEST_TIMEOUT=30
CONNECTION_TIMEOUT=10

# DNS Configuration
DNS_TIMEOUT=10
DNS_RETRIES=3

# ==============================================
# CONFIGURACIÓN DE SEGURIDAD
# ==============================================

# Rate limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_ENABLED=true

# User Agent rotation
USER_AGENT_ROTATION=true

# SSL Verification (para desarrollo, usar false)
SSL_VERIFY=false

# ==============================================
# CONFIGURACIÓN DE ALMACENAMIENTO
# ==============================================

# Directorio de resultados
RESULTS_DIR=results
REPORTS_DIR=results/reports
PDF_REPORTS_DIR=results/pdf_reports

# Retención de archivos (días)
FILE_RETENTION_DAYS=30

# ==============================================
# CONFIGURACIÓN DE NOTIFICACIONES
# ==============================================

# Slack (opcional)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...

# Discord (opcional)
# DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/...

# Email (opcional)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASSWORD=your_app_password

# ==============================================
# CONFIGURACIÓN DE APIs EXTERNAS
# ==============================================

# VirusTotal (opcional)
# VIRUSTOTAL_API_KEY=your_virustotal_api_key

# Shodan (opcional)
# SHODAN_API_KEY=your_shodan_api_key

# ==============================================
# CONFIGURACIÓN DE BASE DE DATOS (FUTURO)
# ==============================================

# PostgreSQL (opcional para almacenamiento persistente)
# DATABASE_URL=postgresql://user:password@localhost:5432/webguard

# Redis (opcional para caché)
# REDIS_URL=redis://localhost:6379/0

# ==============================================
# INSTRUCCIONES DE CONFIGURACIÓN
# ==============================================

# 1. Copia este archivo como .env en el directorio backend/
# 2. Descomenta y configura solo los servicios que tengas disponibles
# 3. Los servicios no configurados serán omitidos automáticamente
# 4. Para pruebas locales, solo necesitas configurar la sección de CONFIGURACIÓN DE ESCANEO

# ==============================================
# CONFIGURACIÓN MÍNIMA PARA DESARROLLO
# ==============================================
# Si solo quieres probar localmente, descomenta estas líneas:

WEBGUARD_ENV=development
WEBGUARD_LOG_LEVEL=DEBUG
MAX_CONCURRENT_REQUESTS=50
MAX_TOTAL_REQUESTS=10000
SSL_VERIFY=false
RATE_LIMIT_ENABLED=false

# ==============================================
# NOTAS DE SEGURIDAD
# ==============================================
# - Nunca subas este archivo .env a control de versiones
# - Usa variables de entorno del sistema en producción
# - Rota regularmente las claves API
# - Usa secrets managers en producción (AWS Secrets Manager, Azure Key Vault, etc.)
